1.GIT BASICS-

git init
	Create empty Git repo in specified directory. Run with no arguments to initialize the current directory as a git repository.
git clone <repo>
	Clone repo located at <repo> onto local machine. Original repo can be located on the local filesystem or on a remote machine via HTTP or SSH. 
git add <directory>
	Stage all changes in <directory> for the next commit. Replace <directory> with a <file> to change a specific file.
git commit -m "<message>"
	Commit the staged snapshot, but instead of launching a text editor, use <message> as the commit message.
git status
	List which files are staged, unstaged, and untracked.
git log
	Display the entire commit history using the default format. For customization see additional options.
git fetch --all
    Fetches all tags/branches

2.GIT DIFF-

git diff <filename>
	Show unstaged changes between your index and working directory
git diff --cached
	Show difference between staged changes and last commit

3.GIT CONFIG-

git config --global --edit
	Open the global configuration file in a text editor for manual editing.

4.GIT BRANCHES-

git branch
	List all of the branches in your repo. Add a <branch> argument to create a new branch with the name <branch>
git checkout -b <branch>
	Create and check out a new branch named <branch>. Drop the -b flag to checkout an existing branch.
git merge <branch> 
	Merge <branch> into the current branch

5.UNDOING CHANGES-

git revert <commit>
	Create new commit that undoes all of the changes made in <commit>, then apply it to the current branch.


-----------------------------------------------------------------------------------------------------------------------
Revert a PR with multiple commits -

	Merge your PR without squash&merge
	git checkout master
	git log -1

	commit f60080f4f6022788264626f268b132705c6dc8ff (HEAD -> testbranch2, origin/testbranch2)
	Merge: 8e2149d 87fd425
	Author: mohitjain2894 <53220304+mohitjain2894@users.noreply.github.com>
	Date:   Fri Jun 11 13:19:24 2021 +0530

    	Merge pull request #4 from mohitjai-backend/testbranch1
    
    	Test commi1


 	git revert f60080f4f6022788264626f268b132705c6dc8ff -m 1

-----------------------------------------------------------------------------------------------------------------------

6.REMOTE REPOSITORIES-

git remote add <name> <url>
	Create a new connection to a remote repo. After adding a remote, you can use <name> as a shortcut for <url> in other commands
git pull <remote> <branch>
	Fetches a specific <branch>,  and immediately merge it into the local copy
git push <remote> <branch>
	Push the branch to <remote>, along with necessary commits and objects. Creates named branch in the remote repo if it doesn’t exist.

7.GIT RESET-

git reset --hard
	Reset staging area and working directory to match most recent commit and overwrites all changes in the working directory.
git reset --hard <commit>
	Resets both the staging area & working directory to match. Deletes uncommitted changes, and all commits after <commit>.

8. GIT LOG-

git log -<limit>
	Limit number of commits by <limit>. E.g. ”git log -5” will limit to 5 commits.
git log <since>..<until>
	Show commits that occur between <since> and <until>. Args can be a commit ID, branch name, HEAD, or any other kind of revision reference.
	
